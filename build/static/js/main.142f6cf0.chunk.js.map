{"version":3,"sources":["utils/utils.js","components/Modal/index.jsx","components/MovieCard/action.js","components/MovieCard/index.jsx","components/MovieList/selector.js","components/MovieList/index.jsx","components/WatchCard/action.js","components/WatchCard/index.jsx","components/Watchlist/index.jsx","components/Watchlist/selector.js","components/Form/action.js","components/Form/index.jsx","components/Container/index.jsx","App.js","utils/serviceWorker.js","components/MovieList/reducer.js","reducer.js","components/Watchlist/reducer.js","middlewares/confirmation.js","store.js","index.js"],"names":["API","BASEURL","getFullMovieInfo","id","axios","get","concat","then","request","data","catch","error","Error","getPoster","query","createAction","type","payload","meta","arguments","length","undefined","Modal","_ref","children","closeModal","react_default","a","createElement","className","Button_default","variant","color","onClick","defaultProps","visible","addMovieToWatchlist","styles","addBtn","position","top","left","MovieCard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hideSpinnerImg","setState","isShowModal","hideModal","loadingImg","getFullInfo","loading","fullMovieData","objectSpread","state","_this2","_this$props","movie","addMoviewToStore","poster_path","Card_default","react_loader_spinner_default","height","width","src","alt","title","onLoad","popularity","overview","aria-label","style","Add_default","keys","components_Modal","budget","React","Component","connect","dispatch","x","getMoviesData","createSelector","moviesList","items","isLoading","movies","cx","classNames","bind","classes","MoviesList","moviesData","listClasses","list","map","el","components_MovieCard","key","uuidv4","removeCard","card","display","btn","WatchCard","removeMoviewFromStore","Delete_default","WatchList","watchList","JSON","parse","localStorage","getItem","components_WatchCard","getWatchList","dispatchMoviesToStore","searchMovies","endLoading","startLoading","searchInput","select","marginLeft","selectPlaceholder","Form","selectedOption","searchValue","handleSelectChange","e","target","value","getMoviesList","handleSearchValue","getSearchMovies","preventDefault","getMovieBySearch","AppBar_default","Toolbar_default","Typography_default","onSubmit","action","Select_default","onChange","MenuItem_default","name","FormHelperText_default","Input_default","placeholder","Search_default","mapDispatchToProps","category","results","getMoviesByCategory","searchMovie","Container","components_Watchlist","components_Form","MovieList","App","components_Container","Boolean","window","location","hostname","match","combineReducers","_ref2","Array","isArray","toConsumableArray","some","setItem","stringify","filteredState","filter","moviesListReducer","confirmation","store","next","shouldConfirm","confirm","enhancer","composeWithDevTools","applyMiddleware","thunk","createStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.142f6cf0.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API = '2bfc2a645701761d2e5ce56e2b5eb82d';\nconst LOCAL = 'en-US';\nconst PAGE = '1';\nconst BASEURL = 'https://api.themoviedb.org/3/';\n\nexport const getMoviesByCategory = category =>\n  axios\n    .get(\n      `${BASEURL}movie/${category}?api_key=${API}&language=${LOCAL}&page=${PAGE}`\n    )\n    .then(request => request.data.results)\n    .catch(error => new Error(error));\n\nexport const getFullMovieInfo = id =>\n  axios\n    .get(`${BASEURL}movie/${id}?api_key=${API}&language=${LOCAL}`)\n    .then(request => request.data)\n    .catch(error => new Error(error));\n\nexport const searchMovie = query =>\n  axios\n    .get(\n      `${BASEURL}search/movie?api_key=${API}&language=${LOCAL}&page=${PAGE}&include_adult=false&query=${query}`\n    )\n    .then(request => request.data.results)\n    .catch(error => new Error(error));\n\nexport const getPoster = query => `https://image.tmdb.org/t/p/w500${query}`;\n\nexport const createAction = type => (payload, meta = null) => ({\n  type,\n  payload,\n  meta\n});\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport './Modal.css';\nimport Button from '@material-ui/core/Button';\n\nconst Modal = ({ children, closeModal }) => {\n  return (\n    <div className=\"modalContainer\">\n      <div className=\"modal\">\n        {children}\n\n        <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n          Close modal\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nModal.defaultProps = {\n  visible: false\n};\n\nModal.propTypes = {\n  closeModal: PropTypes.func\n};\n\nexport default Modal;\n","import { createAction } from '../../utils/utils';\n\nexport const addMovieToWatchlist = createAction('add movie to watch list');\n","import React from 'react';\nimport { getPoster, getFullMovieInfo } from '../../utils/utils';\nimport './MovieCard.css';\nimport Modal from '../Modal';\nimport Loader from 'react-loader-spinner';\nimport { connect } from 'react-redux';\nimport { addMovieToWatchlist } from './action';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst styles = {\n  addBtn: {\n    position: 'absolute',\n    top: '420px',\n    left: '230px'\n  }\n};\n\nclass MovieCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowModal: false,\n      fullMovieData: {},\n      loading: false,\n      loadingImg: true\n    };\n  }\n\n  hideSpinnerImg = () => {\n    this.setState({\n      isShowModal: false\n    });\n  };\n\n  hideModal = () => {\n    this.setState({\n      loadingImg: false\n    });\n  };\n\n  getFullInfo = id => {\n    this.setState({\n      loading: true\n    });\n\n    return getFullMovieInfo(id).then(data =>\n      this.setState({\n        isShowModal: true,\n        fullMovieData: { ...data },\n        loading: false\n      })\n    );\n  };\n\n  render() {\n    const { movie, addMoviewToStore } = this.props;\n\n    return (\n      movie &&\n      movie.poster_path && (\n        <li className=\"card\">\n          <Card>\n            <div className=\"img_container\">\n              {this.state.loadingImg && (\n                <div className=\"loader-img\">\n                  <Loader\n                    type=\"Oval\"\n                    color=\"#00BFFF\"\n                    height=\"100\"\n                    width=\"100\"\n                  />\n                </div>\n              )}\n              <img\n                src={getPoster(movie.poster_path)}\n                alt={movie.title}\n                className=\"img\"\n                onLoad={this.hideModal}\n              />\n            </div>\n            <div className=\"card_info\">\n              <h3 className=\"title\">{movie.title}</h3>\n              <p>{`Rating ${movie.popularity}`}</p>\n              <p className=\"description\">{movie.overview}</p>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => this.getFullInfo(this.props.movie.id)}\n              >\n                Show more details\n              </Button>\n\n              <Button\n                variant=\"fab\"\n                color=\"secondary\"\n                aria-label=\"Add\"\n                onClick={() => addMoviewToStore(movie)}\n                style={styles.addBtn}\n              >\n                <AddIcon />\n              </Button>\n            </div>\n\n            {this.state.isShowModal && Object.keys(this.state.fullMovieData) ? (\n              <Modal closeModal={this.hideModal}>\n                <h2>{this.state.fullMovieData.title}</h2>\n                <p>{this.state.fullMovieData.overview}</p>\n                <p>{`Budget: ${this.state.fullMovieData.budget}$`}</p>\n              </Modal>\n            ) : (\n              this.state.loading && (\n                <div className=\"loader-modal\">\n                  <Loader\n                    type=\"Oval\"\n                    color=\"#00BFFF\"\n                    height=\"100\"\n                    width=\"100\"\n                  />\n                </div>\n              )\n            )}\n          </Card>\n        </li>\n      )\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addMoviewToStore: x => dispatch(addMovieToWatchlist(x))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(MovieCard);\n","import { createSelector } from 'reselect';\n\nconst getMovieList = state => state.moviesList.items;\nconst isLoading = state => state.moviesList.isLoading;\n\nexport const getMoviesData = createSelector(\n  [getMovieList, isLoading],\n  (items, isLoading) => ({\n    movies: items,\n    loading: isLoading\n  })\n);\n","import PropTypes from 'prop-types';\nimport uuidv4 from 'uuid/v4';\nimport MovieCard from '../MovieCard';\nimport React from 'react';\nimport classes from './MoviesList.css';\nimport classNames from 'classnames/bind';\nimport Loader from 'react-loader-spinner';\nimport { connect } from 'react-redux';\nimport { getMoviesData } from './selector';\n\nconst cx = classNames.bind(classes);\n\nconst MoviesList = ({ moviesData }) => {\n  const listClasses = cx({\n    list: moviesData.movies.length ? true : false\n  });\n\n  return moviesData.loading ? (\n    <div className=\"loader-position\">\n      <Loader type=\"Oval\" color=\"#00BFFF\" height=\"100\" width=\"100\" />\n    </div>\n  ) : (\n    moviesData &&\n      moviesData.movies &&\n      !!moviesData.movies.length && (\n        <ul className={listClasses}>\n          {moviesData.movies.map(el => (\n            <MovieCard movie={el} key={uuidv4()} />\n          ))}\n        </ul>\n      )\n  );\n};\n\nMoviesList.defaultProps = {\n  moviesData: {}\n};\n\nMoviesList.propTypes = {\n  moviesData: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  moviesData: getMoviesData(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(MoviesList);\n","import { createAction } from '../../utils/utils';\n\nexport const removeCard = createAction('remove movie from watch list');\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { getPoster } from '../../utils/utils';\nimport './Watchcard.css';\nimport { removeCard } from './action';\nimport { connect } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst styles = {\n  card: {\n    display: 'flex'\n  },\n\n  btn: {\n    position: 'absolute',\n    top: '85px',\n    left: '255px'\n  }\n};\n\nconst WatchCard = ({ movie, removeMoviewFromStore }) => {\n  return (\n    movie && (\n      <li className=\"watch-list__card\">\n        <Card style={styles.card}>\n          <img\n            src={getPoster(movie.poster_path)}\n            alt={movie.title}\n            className=\"watch-list__img\"\n          />\n          <div>\n            <h3>{movie.title}</h3>\n            <p>{`Rating ${movie.popularity}`}</p>\n            <Button\n              variant=\"fab\"\n              onClick={() => removeMoviewFromStore(movie.id)}\n              style={styles.btn}\n            >\n              <DeleteIcon />\n            </Button>\n          </div>\n        </Card>\n      </li>\n    )\n  );\n};\n\nWatchCard.defaultProps = {\n  movie: {}\n};\n\nWatchCard.propTypes = {\n  movie: PropTypes.object\n};\n\nconst mapDispatchToProps = dispatch => ({\n  removeMoviewFromStore: x => dispatch(removeCard(x))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(WatchCard);\n","import PropTypes from 'prop-types';\nimport uuidv4 from 'uuid/v4';\nimport React from 'react';\nimport WatchCard from '../WatchCard';\nimport './Watchlist.css';\nimport { connect } from 'react-redux';\nimport { addMovieToWatchlist } from '../MovieCard/action';\nimport { getWatchList } from './selector';\n\nclass WatchList extends React.Component {\n  state = {};\n\n  componentDidMount() {\n    const watchList = JSON.parse(localStorage.getItem('watchlist'));\n    if (watchList && !!watchList.length) {\n      this.props.addMoviewToStore(watchList);\n    }\n  }\n\n  render() {\n    const { list } = this.props;\n\n    return (\n      list && (\n        <div className=\"watchlist-container\">\n          <h2 className=\"watch_list\">Watchlist</h2>\n          <ul>\n            {!!list.length &&\n              list.map(el => <WatchCard movie={el} key={uuidv4()} />)}\n          </ul>\n        </div>\n      )\n    );\n  }\n}\n\nWatchList.defaultProps = {\n  list: []\n};\n\nWatchList.propTypes = {\n  list: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  list: getWatchList(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addMoviewToStore: x => dispatch(addMovieToWatchlist(x))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WatchList);\n","export const getWatchList = state => state.watchList;\n","import {\n  getMoviesByCategory,\n  createAction,\n  searchMovie\n} from '../../utils/utils';\n\nconst dispatchMoviesToStore = createAction(\n  'dispatch movies to store by category'\n);\nconst searchMovies = createAction('search movies');\nconst endLoading = createAction('loading end');\nconst startLoading = createAction('loading start');\n\nexport const getMoviesList = category => dispatch => {\n  dispatch(startLoading(true));\n  getMoviesByCategory(category).then(data => {\n    dispatch(endLoading(false));\n    dispatch(dispatchMoviesToStore(data));\n  });\n};\n\nexport const getMovieBySearch = query => dispatch => {\n  dispatch(startLoading(true));\n  searchMovie(query).then(data => {\n    dispatch(endLoading(false));\n    dispatch(searchMovies(data));\n  });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getMoviesList, getMovieBySearch } from './action';\nimport Button from '@material-ui/core/Button';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nimport './Form.css';\n\nconst styles = {\n  searchInput: {\n    color: 'white'\n  },\n\n  select: {\n    color: 'white',\n    width: '300px'\n  },\n\n  btn: {\n    marginLeft: '10px'\n  },\n\n  selectPlaceholder: {\n    color: 'white'\n  }\n};\n\nclass Form extends React.Component {\n  state = {\n    selectedOption: '',\n    searchValue: ''\n  };\n\n  handleSelectChange = e => {\n    this.setState({\n      selectedOption: e.target.value\n    });\n\n    this.props.getMoviesList(e.target.value);\n  };\n\n  handleSearchValue = e => {\n    this.setState({\n      searchValue: e.target.value\n    });\n  };\n\n  getSearchMovies = e => {\n    e.preventDefault();\n\n    if (this.state.searchValue === '') {\n      return false;\n    }\n\n    this.props.getMovieBySearch(this.state.searchValue);\n  };\n\n  render() {\n    return (\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <Typography variant=\"subtitle2\" color=\"inherit\">\n            <form onSubmit={this.getSearchMovies} action=\"#\" className=\"form\">\n              <div className=\"select-container\">\n                <Select\n                  value={this.state.selectedOption}\n                  onChange={this.handleSelectChange}\n                  className=\"select\"\n                  style={styles.select}\n                >\n                  <MenuItem value=\"top_rated\" name=\"Top rated\">\n                    Top rated\n                  </MenuItem>\n                  <MenuItem value=\"upcoming\" name=\"Upcoming\">\n                    Upcoming\n                  </MenuItem>\n                  <MenuItem value=\"popular\" name=\"Popular\">\n                    Popular\n                  </MenuItem>\n                </Select>\n                <FormHelperText style={styles.selectPlaceholder}>\n                  Search by category\n                </FormHelperText>\n              </div>\n\n              <div className=\"search-input__container\">\n                <Input\n                  placeholder=\"Search by title\"\n                  value={this.searchValue}\n                  onChange={this.handleSearchValue}\n                  style={styles.searchInput}\n                />\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  type=\"submit\"\n                  style={styles.btn}\n                >\n                  Search\n                  <SearchIcon className=\"search_btn__icon\" />\n                </Button>\n              </div>\n            </form>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nconst mapDispatchToProps = { getMoviesList, getMovieBySearch };\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Form);\n","import React from 'react';\nimport MoviesList from '../MovieList';\nimport WatchList from '../Watchlist';\nimport './Container.css';\nimport Form from '../Form';\n\nconst Container = () => (\n  <div className=\"container\">\n    <WatchList />\n    <div className=\"form-container\">\n      <Form />\n      <MoviesList />\n    </div>\n  </div>\n);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Container from './components/Container';\n\nclass App extends Component {\n  render() {\n    return <Container />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\n\nconst items = (state = [], { type, payload }) => {\n  switch (type) {\n    case 'dispatch movies to store by category':\n    case 'search movies':\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = false, { type, payload }) => {\n  switch (type) {\n    case 'loading start':\n    case 'loading end':\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items,\n  isLoading\n});\n","import { combineReducers } from 'redux';\nimport { watchListreducer } from './components/Watchlist/reducer';\nimport moviesListReducer from './components/MovieList/reducer';\n\nexport default combineReducers({\n  watchList: watchListreducer,\n  moviesList: moviesListReducer\n});\n","export const watchListreducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case 'add movie to watch list':\n      if (Array.isArray(payload)) {\n        return [...state, ...payload];\n      }\n\n      if (!state.some(el => el.id === payload.id)) {\n        localStorage.setItem('watchlist', JSON.stringify([...state, payload]));\n      }\n\n      return state.some(el => el.id === payload.id)\n        ? state\n        : [...state, payload];\n\n    case 'remove movie from watch list':\n      const filteredState = state.filter(el => el.id !== payload);\n      localStorage.setItem('watchlist', JSON.stringify([...filteredState]));\n\n      return filteredState;\n\n    default:\n      return state;\n  }\n};\n","const confirmation = store => next => action => {\n  const shouldConfirm = action.meta && action.meta.shouldConfirm;\n\n  if (!shouldConfirm) return next(action);\n\n  const shouldProceed = window.confirm('Are you sure?');\n\n  if (shouldProceed) next(action);\n};\n\nexport default confirmation;\n","import { createStore, applyMiddleware } from 'redux';\nimport combineReducers from './reducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport confirmation from './middlewares/confirmation';\n\n// custom thunk\n// import thunk from './middlewares/movielist';\nimport thunk from 'redux-thunk';\n\nconst enhancer = composeWithDevTools(applyMiddleware(confirmation, thunk));\n\nconst store = createStore(combineReducers, enhancer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './utils/serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}